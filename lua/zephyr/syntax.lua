local P = require("zephyr.palette")
local util = require("zephyr.utils")

--- darkens a color
---@param color string
---@param amount? integer
---@return string
local function fade(color, amount)
	if amount then
		return util.alter_color(color, amount)
	end
	return util.alter_color(color, -20)
end

return {
	-- Editor
	Normal = { fg = P.fg, bg = fade(P.bg) },
	Terminal = { fg = P.fg, bg = P.bg },
	SignColumn = { link = "Normal" },
	FoldColumn = { fg = P.fg_alt, bg = P.black },
	VertSplit = { fg = P.darker_blue, bg = fade(P.bg) },
	Folded = { fg = P.grey, bg = P.dark_alt },
	EndOfBuffer = { fg = P.bg, bg = P.none },
	IncSearch = { fg = P.base99, bg = fade(P.teal) },
	Search = { fg = P.base99, bg = fade(P.teal) },
	ColorColumn = { fg = P.none, bg = P.dark },
	Conceal = { fg = P.grey, bg = P.none },
	Cursor = { fg = P.none, bg = P.none, reverse = true },
	vCursor = { fg = P.none, bg = P.none, reverse = true },
	iCursor = { fg = P.none, bg = P.none, reverse = true },
	lCursor = { fg = P.none, bg = P.none, reverse = true },
	CursorIM = { fg = P.none, bg = P.none, reverse = true },
	CursorColumn = { bg = P.dark_alt },
	CursorLine = { bg = P.dark },
	LineNr = { fg = P.base5 },
	qfLineNr = { fg = P.cyan },
	CursorLineNr = { fg = P.pink, bg = P.dark, bold = true },
	DiffAdd = { fg = P.black, bg = P.dark_green },
	DiffChange = { fg = P.black, bg = P.yellow },
	DiffDelete = { fg = P.black, bg = P.red },
	DiffText = { fg = P.black, bg = P.fg },
	Directory = { fg = P.blue, bg = P.none },
	ErrorMsg = { fg = P.pale_red, bg = P.none, bold = true },
	WarningMsg = { fg = P.dark_orange, bg = P.none, bold = true },
	ModeMsg = { fg = P.fg, bg = P.none, bold = true },
	MatchParen = { fg = P.none, bg = P.none },
	NonText = { fg = P.base5 },
	Whitespace = { fg = P.base4 },
	SpecialKey = { fg = P.bg },
	Pmenu = { fg = P.fg, bg = P.bg },
	PmenuSel = { fg = P.base0, bg = P.blue },
	PmenuSelBold = { fg = P.base0, bg = P.blue },
	PmenuSbar = { fg = P.none, bg = P.dark_grey },
	PmenuThumb = { bg = P.darker_blue },
	WildMenu = { fg = P.fg, bg = P.green },
	StatusLine = { fg = P.base8, bg = P.base2 },
	StatusLineNC = { fg = P.grey, bg = P.base2 },
	Question = { fg = P.yellow },
	NormalFloat = { fg = P.pale_blue, bg = fade(P.bg) },
	Tabline = { fg = P.base6, bg = P.base2 },
	TabLineSel = { bg = P.dark_alt },
	SpellBad = { fg = P.error_red, bg = P.none, undercurl = true },
	SpellCap = { fg = P.blue, bg = P.none, undercurl = true },
	SpellLocal = { fg = P.cyan, bg = P.none, undercurl = true },
	SpellRare = { fg = P.violet, bg = P.none, undercurl = true },
	Visual = { fg = P.base99, bg = P.darker_blue },
	VisualNOS = { link = "Visual" },
	QuickFixLine = { fg = P.black },
	Debug = { fg = P.orange },
	debugBreakpoint = { fg = P.bg, bg = P.red },
	-- Extra (Editor)
	NormalNC = { fg = P.fg, bg = P.none },
	MsgArea = { bg = fade(P.bg) },
	MsgSeparator = { fg = P.base6, bg = fade(P.bg) },
	qfFileName = { fg = P.yellowgreen },
	netrwDir = { fg = P.pink },
	TabLineFill = { bg = P.bg },
	WinSeparator = { fg = P.darker_blue },

	-- Lang
	Boolean = { fg = P.orange },
	Number = { fg = P.brown },
	Float = { fg = P.brown },
	-- PreProc = { fg = P.blue },
	PreCondit = { fg = P.violet },
	Include = { fg = P.violet },
	Define = { fg = P.violet },
	Conditional = { fg = P.pink },
	Repeat = { fg = P.pink },
	Keyword = { fg = P.pink },
	Typedef = { fg = P.red },
	Exception = { fg = P.red },
	Statement = { fg = P.red },
	Error = { fg = P.red },
	StorageClass = { fg = P.orange },
	Tag = { fg = P.orange },
	Label = { fg = P.orange },
	Structure = { fg = P.orange },
	Operator = { fg = P.redwine },
	Title = { fg = P.orange, bold = true },
	Special = { fg = P.salmon },
	SpecialChar = { fg = P.yellow },
	Type = { fg = P.teal },
	Function = { fg = P.blue },
	String = { fg = P.light_green },
	Character = { fg = P.green },
	Constant = { fg = P.cyan },
	Macro = { fg = P.cyan },
	Identifier = { fg = P.blue },
	Comment = { fg = P.comment },
	SpecialComment = { fg = P.comment },
	Todo = { fg = P.orange, italic = true },
	Delimiter = { fg = P.fg },
	Ignore = { fg = P.grey },
	Underlined = { fg = P.none, underline = true },
	-- Extra (Lang)
	Variable = { fg = P.green },
	Property = { fg = P.green },
	Field = { fg = P.blue },
	Method = { fg = P.green },
	Class = { fg = P.blue },
	JsonFold = { fg = P.comment },
}
